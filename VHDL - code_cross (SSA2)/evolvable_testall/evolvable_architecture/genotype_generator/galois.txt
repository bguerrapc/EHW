-------------------------------------------------------
--Baseado no código:
-- Design Name : lfsr
-- File Name   : lfsr.vhd
-- Function    : Linear feedback shift register
-- Coder       : Deepak Kumar Tala (Verilog)
-- Translator  : Alexander H Pham (VHDL)
-------------------------------------------------------
library ieee;
    use ieee.std_logic_1164.all;

entity galois is
  port (
    cout   :out std_logic_vector (15 downto 0);-- Output of the counter
    clk    :in  std_logic                    -- Input rlock
    --reset  :in  std_logic                     -- Input reset
  );
end entity;

architecture rtl of galois is
    signal count           :std_logic_vector (15 downto 0):= "0000000000000001";
    --signal assist : std_logic;
	 --signal linear_feedback :std_logic;

begin

    process (clk) begin
        if (rising_edge(clk)) then
					count(0) <= count(1);
					count(1) <= count(2);
					count(2) <= count(3);
					count(3) <= count(4);
					count(4) <= count(5);
					count(5) <= count(6);
					count(6) <= count(7);
					count(7) <= count(8);
					count(8) <= count(9);
					count(9) <= count(10);
					count(10) <= count(0) xor count(11);
					count(11) <= count(12);
					count(12) <= count(0) xor count(13);
					count(13) <= count(0) xor count(14);
					count(14) <= count(15);
					count(15) <= count(0);
		  end if;
    end process;
    cout <= count;
end architecture;